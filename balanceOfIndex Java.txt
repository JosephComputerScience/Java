The balance index of an array of integers is an index such that the sum of elements at lower
indexes is equal to the sum of elements at higher indexes. Assume the sum of zero elements is equal to
zero.
For example, in a sequence S:
S[0] = -5; S[1] =3; S[2] = 7; S[3] = -8; S[4] = -2; S[5]= 5; S[6] =2
3 is a balance index, because:
S[0]+S[1]+S[2] = S[4]+S[5]+S[6]
6 is also a balance index, because:
S[0]+S[1]+S[2]+S[3]+S[4]+S[5]=0
And the sum of zero elements is zero.
Note that the index 7 is not a balance index - because it is not a valid index of sequence S.
Implement an efficient function in Java
int balIndex(int S[], int n)

//This import will give the sum of an array new to Java8
import java.util.stream.IntStream;

//This method finds the balance index in the array if it exists
//This method only prints the first ballance index found but can be modified slightly to find all of them
static int balIndex(int S[], int n) {
		int leftTot = 0;
		int buffer = 0;
		int rightTot = IntStream.of(S).sum();
		if (S.length == 0) {
			return -1;
		} 
		else {
			for (int i = 0; i < n; i++) {
				leftTot += buffer;
				buffer = S[i];
				rightTot -= buffer;

				if (leftTot == rightTot) {
					return (i);
				}
			}
			return -1;
		}
	}